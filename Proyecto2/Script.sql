

create table Rol(
    id_rol  NUMBER GENERATED BY default AS IDENTITY ,
    tipo_rol varchar(50),
    PRIMARY KEY (id_rol)
);

SELECT * FROM Rol ;

INSERT INTO Rol (tipo_rol) values('administrador');
INSERT INTO Rol (tipo_rol) values('aplicante');
INSERT INTO Rol (tipo_rol) values('coordinador');
INSERT INTO Rol (tipo_rol) values('guest');
INSERT INTO Rol (tipo_rol) values('revisor');





create table Usuario(
    id_usuario  NUMBER GENERATED BY default AS IDENTITY ,
    username varchar(50),
    password varchar(50),
    fecha_inicio date,
    fecha_baja date,
    estado varchar(1),
    id_rol int not null,
    constraint fk_tipo 
        foreign key (id_rol) 
        references Rol(id_rol),
    unique(username, password),
    PRIMARY KEY (id_usuario)
);

insert into usuario (USERNAME,PASSWORD,FECHA_INICIO,FECHA_BAJA,ESTADO,ID_ROL) values ('admin', 'admin',CURRENT_DATE,CURRENT_DATE,'T',1) ;


CREATE TABLE Formato(
    id_formato NUMBER GENERATED BY default AS IDENTITY,
    nombre_formato varchar(200) UNIQUE,
    PRIMARY KEY (id_formato)
);



CREATE TABLE Requisito(
    id_requisito NUMBER GENERATED BY default AS IDENTITY,
    nombre_requisito varchar(200),
    tamanio int,
    obligatorio int,
    unique(nombre_requisito,tamanio,obligatorio),
    PRIMARY KEY (id_requisito)
);





CREATE TABLE RequisitoFormato(
    id_requisitoformato NUMBER GENERATED BY default AS IDENTITY,
    id_requisito int not null,
    id_formato int not null,
    PRIMARY KEY (id_requisitoformato),
    constraint tk_requisito foreign key (id_requisito) references Requisito(id_requisito),
    constraint tk_formato foreign key (id_formato) references Formato(id_formato)
);






CREATE TABLE Categoria(
    id_categoria NUMBER GENERATED BY default AS IDENTITY,
    nombre_categoria varchar(250) UNIQUE,
    PRIMARY key(id_categoria)
);




CREATE TABLE Puesto(
    id_puesto NUMBER GENERATED BY default AS IDENTITY,
    nombre_puesto varchar(250),
    salario float,
    PRIMARY KEY (id_puesto),
    unique(nombre_puesto,salario)
);






create table PuestoCategoria(
    id_puestocategoria NUMBER GENERATED BY default AS IDENTITY,
    id_puesto int not null,
    id_categoria int not null,
    PRIMARY KEY (id_puestocategoria),
    CONSTRAINT  tk_puesto FOREIGN  KEY (id_puesto) references Puesto(id_puesto),
    constraint tk_categoria foreign key (id_categoria) references Categoria(id_categoria),
    unique(id_puesto, id_categoria)
);





create table PuestoRequisito(
    id_puestorequisito NUMBER GENERATED BY default AS IDENTITY,
    id_puesto int not null,
    id_requisito int not null,
    PRIMARY KEY (id_puestorequisito),
    constraint tk_puestopr foreign key (id_puesto) references Puesto(id_puesto),
    constraint tk_requisitopr foreign key (id_requisito) references Requisito(id_requisito),
    unique(id_puesto,id_requisito)
);





create table Departamento(
    id_departamento NUMBER GENERATED BY default AS IDENTITY,
    nombre_departamento varchar(200),
    capital float, 
    coordinador int,
    PRIMARY KEY (id_departamento),
    constraint tk_coordinadordep foreign key (coordinador) references Usuario(id_usuario),
    unique(nombre_departamento, capital)
);

insert into departamento (nombre_departamento, capital) values ('CORDINACIÓN GENERAL DE LA UNIDAD DEL SISTEMA DE INFORMACIÓN GERENCIAL DE SALUD',40000.00);
SELECT * FROM DEPARTAMENTO;
 


create table DepartamentoP(
    id_departamentoP NUMBER GENERATED BY default AS IDENTITY,
    departamento_padre int,
    departamento_hijo int,
    PRIMARY KEY (id_departamentoP),
    constraint departamento_padre foreign key (departamento_padre) references Departamento(id_departamento),
    constraint departamento_hijo foreign key (departamento_hijo) references Departamento(id_departamento),
    unique(departamento_padre, departamento_hijo)
);




create table DepartamentoPuesto(
    id_departamentopuesto NUMBER GENERATED BY default AS IDENTITY,
    id_departamento int not null,
    id_puesto int not null,
    PRIMARY KEY (id_departamentopuesto),
    constraint tk_departamentodp foreign key (id_departamento) references Departamento(id_departamento),
    constraint tk_puestodp foreign key (id_puesto) references Puesto(id_puesto),
    unique(id_departamento, id_puesto)
);





create table DepartamentoUsuario(
    id_departamentousuario NUMBER GENERATED BY default AS IDENTITY,
    id_usuario int,
    id_departamento int,
    revisor varchar(1),
    PRIMARY KEY (id_departamentousuario),
    constraint usuario_depa foreign key (id_usuario) references Usuario(id_usuario),
    constraint depa_usuario foreign key (id_departamento) references Departamento(id_departamento),
    unique(id_usuario, id_departamento)  
);






CREATE TABLE aplicante(
cui  NUMBER GENERATED BY default AS IDENTITY,
nombre_aplicante varchar(200),
apellido_aplicante varchar(200),
correo_aplicante varchar(200),
direccion_aplicante varchar(200),
telefono_aplicante varchar(200),
cv_aplicante varchar(200),
estado_aplicante varchar(5),
PRIMARY KEY (cui)
);


drop table DepartamentoP;
drop table DepartamentoUsuario;
drop table DepartamentoPuesto;
drop table Departamento;
drop table PuestoRequisito;
drop table PuestoCategoria;
drop table Puesto;
drop table Categoria;
drop table RequisitoFormato;
drop table Requisito;
drop table Formato;
drop table Aplicante;
drop table Usuario;
drop table rol;

